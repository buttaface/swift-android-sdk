name: SDKs
on:
  pull_request:
  schedule:
    - cron: '0 13 * * *'
jobs:
  build-tests:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        arch: [aarch64, x86_64, armv7]
    steps:
      - name: Clone
        uses: actions/checkout@v2
        with:
          path: sdk-config
      - name: Cache SDK
        id: cache-sdk
        uses: actions/cache@v2
        with:
          path: ~/swift-5.4-android-${{ matrix.arch }}-24-sdk.tar.xz
          key: ${{ matrix.arch }}-sdk
      - name: Get Android SDK if not cached
        if: steps.cache-sdk.outputs.cache-hit != 'true'
        run: wget -O ~/swift-5.4-android-${{ matrix.arch }}-24-sdk.tar.xz https://github.com/buttaface/swift-android-sdk/releases/download/5.4/swift-5.4-android-${{ matrix.arch }}-24-sdk.tar.xz
      - name: Cache Termux debug app for NIO tests
        if: ${{ matrix.arch == 'x86_64' }}
        id: cache-termux
        uses: actions/cache@v2
        with:
          path: ~/app-debug.apk
          key: termux-app
      - name: Patch SDK and SPM config
        run: |
          cd sdk-config
          tar xf ~/swift-5.4-android-${{ matrix.arch }}-24-sdk.tar.xz
          ln -sf ${SWIFT_PATH}/../lib/swift/clang swift-5.4-android-${{ matrix.arch }}-24-sdk/usr/lib/swift/clang
          sed -i "s%/home/butta/swift-5.4.1-RELEASE-ubuntu20.04/usr/bin%${SWIFT_PATH}%" android-${{ matrix.arch }}.json
          sed -i "s%/home/butta/swift-5.4-android%`pwd`/swift-5.4-android%" android-${{ matrix.arch }}.json
          sed -i "s%/home/butta/src/android-ndk-r21e%${ANDROID_NDK_HOME}%" android-${{ matrix.arch }}.json
          sed -i "s%/home/butta/src/android-ndk-r21e%${ANDROID_NDK_HOME}%" swift-5.4-android-${{ matrix.arch }}-24-sdk/usr/lib/swift/android/${{ matrix.arch }}/glibc.modulemap
          sed -i "s%/home/butta/swift-5.4-android%`pwd`/swift-5.4-android%" swift-5.4-android-${{ matrix.arch }}-24-sdk/usr/lib/swift/android/${{ matrix.arch }}/glibc.modulemap
      - name: Get Swift package
        uses: actions/checkout@v2
        with:
          repository: apple/swift-argument-parser
          path: sap
      - name: Build Swift package
        run: |
          cd sap
          swift build --build-tests --enable-test-discovery --destination ../sdk-config/android-${{ matrix.arch }}.json -Xlinker -rpath -Xlinker \$ORIGIN/lib/swift/android
      - name: Get Swift crypto package
        uses: actions/checkout@v2
        with:
          repository: apple/swift-crypto
          path: sc
      - name: Build Swift crypto package
        run: |
          cd sc
          git apply ../sdk-config/package-patches/swift-crypto-test-vectors.patch
          swift build --build-tests --enable-test-discovery --destination ../sdk-config/android-${{ matrix.arch }}.json -Xlinker -rpath -Xlinker \$ORIGIN/lib/swift/android
      - name: Get Swift NIO package
        uses: actions/checkout@v2
        with:
          repository: apple/swift-nio
          path: snio
      - name: Build Swift NIO package
        run: |
          cd snio
          git apply ../sdk-config/package-patches/swift-nio-change-tmp-and-disable-tests.patch
          swift build --build-tests --destination ../sdk-config/android-${{ matrix.arch }}.json -Xlinker -rpath -Xlinker \$ORIGIN/lib/swift/android
      - name: Get Swift Numerics package
        uses: actions/checkout@v2
        with:
          repository: apple/swift-numerics
          path: sn
      - name: Build Swift Numerics package
        run: |
          cd sn
          swift build --build-tests --enable-test-discovery --destination ../sdk-config/android-${{ matrix.arch }}.json -Xlinker -rpath -Xlinker \$ORIGIN/lib/swift/android -Xlinker -lm
      - name: Get Swift System package
        uses: actions/checkout@v2
        with:
          repository: apple/swift-system
          path: ss
      - name: Build Swift System package
        run: |
          cd ss
          git apply ../sdk-config/package-patches/swift-system-test.patch
          swift build --build-tests --enable-test-discovery --destination ../sdk-config/android-${{ matrix.arch }}.json -Xlinker -rpath -Xlinker \$ORIGIN/lib/swift/android
      - name: Put tests in one directory to push to Android x86_64 emulator
        if: ${{ matrix.arch == 'x86_64' }}
        run: |
          mkdir -p pack/lib/swift/android
          cp sap/.build/x86_64-unknown-linux-android/debug/{math,repeat,roll,swift-argument-parserPackageTests.xctest} pack
          cp sc/.build/x86_64-unknown-linux-android/debug/swift-cryptoPackageTests.xctest pack
          cp snio/.build/x86_64-unknown-linux-android/debug/swift-nioPackageTests.xctest pack
          cp sn/.build/x86_64-unknown-linux-android/debug/swift-numericsPackageTests.xctest pack
          cp ss/.build/x86_64-unknown-linux-android/debug/swift-systemPackageTests.xctest pack
          mkdir pack/crypto-vectors
          cp sc/Tests/Test\ Vectors/* sc/Tests/_CryptoExtrasVectors/* pack/crypto-vectors
          cp sdk-config/swift-5.4-android-x86_64-24-sdk/usr/lib/lib*so pack/lib
          cp sdk-config/swift-5.4-android-x86_64-24-sdk/usr/lib/swift/android/lib*so pack/lib/swift/android
      - name: Run tests on Android x86_64 emulator
        if: ${{ matrix.arch == 'x86_64' }}
        uses: reactivecircus/android-emulator-runner@v2
        with:
          api-level: 24
          arch: x86_64
          script: |
            adb install ~/app-debug.apk
            adb push pack /data/local/tmp

            adb shell /data/local/tmp/pack/swift-argument-parserPackageTests.xctest
            adb shell /data/local/tmp/pack/swift-cryptoPackageTests.xctest
            adb shell "run-as com.termux cp -r /data/local/tmp/pack /data/data/com.termux/"
            adb shell "run-as com.termux /data/data/com.termux/pack/swift-nioPackageTests.xctest"
            adb shell /data/local/tmp/pack/swift-numericsPackageTests.xctest
            adb shell /data/local/tmp/pack/swift-systemPackageTests.xctest
